{
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\",\"filename\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\",\"plugins\":[],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server",
      "filename": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const {\n  join\n} = require(\"path\");\n\nconst express = require('express');\n\nconst {\n  graphqlHTTP\n} = require('express-graphql');\n\nconst {\n  loadSchemaSync\n} = require(\"@graphql-tools/load\");\n\nconst {\n  GraphQLFileLoader\n} = require(\"@graphql-tools/graphql-file-loader\");\n\nconst {\n  addResolversToSchema\n} = require(\"@graphql-tools/schema\");\n\nconst Query = require(\"./resolvers/query\");\n\nconst Mutation = require(\"./resolvers/mutation\");\n\nconst cors = require(\"cors\");\n\nconst app = express();\napp.use(cors());\nconst schema = loadSchemaSync(join(__dirname, \"./schema.graphql\"), {\n  loaders: [new GraphQLFileLoader()]\n});\nconst schemaWithResolvers = addResolversToSchema({\n  schema,\n  resolvers: {\n    Query\n  }\n});\napp.use('/graphql', graphqlHTTP({\n  schema: schemaWithResolvers,\n  graphiql: true\n})); // const server = new ApolloClient({\n//     schema: schemaWithResolvers\n// })\n\napp.listen(4000, () => {\n  console.log('server is running on port 4000');\n}); // server.listen(4000,()=>{\n//     console.log('server is running on port 4000')\n// })\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImpvaW4iLCJyZXF1aXJlIiwiZXhwcmVzcyIsImdyYXBocWxIVFRQIiwibG9hZFNjaGVtYVN5bmMiLCJHcmFwaFFMRmlsZUxvYWRlciIsImFkZFJlc29sdmVyc1RvU2NoZW1hIiwiUXVlcnkiLCJNdXRhdGlvbiIsImNvcnMiLCJhcHAiLCJ1c2UiLCJzY2hlbWEiLCJfX2Rpcm5hbWUiLCJsb2FkZXJzIiwic2NoZW1hV2l0aFJlc29sdmVycyIsInJlc29sdmVycyIsImdyYXBoaXFsIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVdDLE9BQU8sQ0FBQyxNQUFELENBQXhCOztBQUNBLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFDRSxFQUFBQTtBQUFELElBQWdCRixPQUFPLENBQUMsaUJBQUQsQ0FBN0I7O0FBQ0EsTUFBTTtBQUFFRyxFQUFBQTtBQUFGLElBQXFCSCxPQUFPLENBQUMscUJBQUQsQ0FBbEM7O0FBQ0EsTUFBTTtBQUFFSSxFQUFBQTtBQUFGLElBQXdCSixPQUFPLENBQUMsb0NBQUQsQ0FBckM7O0FBQ0EsTUFBTTtBQUFFSyxFQUFBQTtBQUFGLElBQTJCTCxPQUFPLENBQUMsdUJBQUQsQ0FBeEM7O0FBQ0EsTUFBTU0sS0FBSyxHQUFHTixPQUFPLENBQUMsbUJBQUQsQ0FBckI7O0FBQ0EsTUFBTU8sUUFBUSxHQUFHUCxPQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBQ0EsTUFBTVEsSUFBSSxHQUFJUixPQUFPLENBQUMsTUFBRCxDQUFyQjs7QUFHQSxNQUFNUyxHQUFHLEdBQUdSLE9BQU8sRUFBbkI7QUFDQVEsR0FBRyxDQUFDQyxHQUFKLENBQVFGLElBQUksRUFBWjtBQUNBLE1BQU1HLE1BQU0sR0FBSVIsY0FBYyxDQUFDSixJQUFJLENBQUNhLFNBQUQsRUFBVyxrQkFBWCxDQUFMLEVBQW9DO0FBQzlEQyxFQUFBQSxPQUFPLEVBQUUsQ0FBQyxJQUFJVCxpQkFBSixFQUFEO0FBRHFELENBQXBDLENBQTlCO0FBSUEsTUFBTVUsbUJBQW1CLEdBQUdULG9CQUFvQixDQUFDO0FBQzdDTSxFQUFBQSxNQUQ2QztBQUU3Q0ksRUFBQUEsU0FBUyxFQUFDO0FBQ05ULElBQUFBO0FBRE07QUFGbUMsQ0FBRCxDQUFoRDtBQU9BRyxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CUixXQUFXLENBQUM7QUFDNUJTLEVBQUFBLE1BQU0sRUFBRUcsbUJBRG9CO0FBRTVCRSxFQUFBQSxRQUFRLEVBQUU7QUFGa0IsQ0FBRCxDQUEvQixFLENBS0E7QUFDQTtBQUNBOztBQUVBUCxHQUFHLENBQUNRLE1BQUosQ0FBVyxJQUFYLEVBQWdCLE1BQUk7QUFDaEJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdDQUFaO0FBQ0gsQ0FGRCxFLENBR0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IkQ6XFxVU19CSUxMX1BBWVxcU2hvcnQgZmxpbSBhcHBcXFNob3J0LUZpbG1cXFNlcnZlclxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGpvaW4gfSA9IHJlcXVpcmUoXCJwYXRoXCIpO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCB7Z3JhcGhxbEhUVFB9ID0gcmVxdWlyZSgnZXhwcmVzcy1ncmFwaHFsJyk7XHJcbmNvbnN0IHsgbG9hZFNjaGVtYVN5bmMgfSA9IHJlcXVpcmUoXCJAZ3JhcGhxbC10b29scy9sb2FkXCIpO1xyXG5jb25zdCB7IEdyYXBoUUxGaWxlTG9hZGVyIH0gPSByZXF1aXJlKFwiQGdyYXBocWwtdG9vbHMvZ3JhcGhxbC1maWxlLWxvYWRlclwiKTtcclxuY29uc3QgeyBhZGRSZXNvbHZlcnNUb1NjaGVtYSB9ID0gcmVxdWlyZShcIkBncmFwaHFsLXRvb2xzL3NjaGVtYVwiKTtcclxuY29uc3QgUXVlcnkgPSByZXF1aXJlKFwiLi9yZXNvbHZlcnMvcXVlcnlcIik7XHJcbmNvbnN0IE11dGF0aW9uID0gcmVxdWlyZShcIi4vcmVzb2x2ZXJzL211dGF0aW9uXCIpO1xyXG5jb25zdCBjb3JzID0gIHJlcXVpcmUoXCJjb3JzXCIpO1xyXG5cclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5jb25zdCBzY2hlbWEgPSAgbG9hZFNjaGVtYVN5bmMoam9pbihfX2Rpcm5hbWUsXCIuL3NjaGVtYS5ncmFwaHFsXCIpLHtcclxuICAgIGxvYWRlcnM6IFtuZXcgR3JhcGhRTEZpbGVMb2FkZXIoKV0sXHJcbn0pO1xyXG5cclxuY29uc3Qgc2NoZW1hV2l0aFJlc29sdmVycyA9IGFkZFJlc29sdmVyc1RvU2NoZW1hKHtcclxuICAgIHNjaGVtYSxcclxuICAgIHJlc29sdmVyczp7XHJcbiAgICAgICAgUXVlcnlcclxuICAgICAgIFxyXG4gICAgfSxcclxufSlcclxuYXBwLnVzZSgnL2dyYXBocWwnLCBncmFwaHFsSFRUUCh7XHJcbiAgICBzY2hlbWE6IHNjaGVtYVdpdGhSZXNvbHZlcnMsXHJcbiAgICBncmFwaGlxbDogdHJ1ZSxcclxufSkpO1xyXG5cclxuLy8gY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb0NsaWVudCh7XHJcbi8vICAgICBzY2hlbWE6IHNjaGVtYVdpdGhSZXNvbHZlcnNcclxuLy8gfSlcclxuXHJcbmFwcC5saXN0ZW4oNDAwMCwoKT0+e1xyXG4gICAgY29uc29sZS5sb2coJ3NlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgNDAwMCcpXHJcbn0pO1xyXG4vLyBzZXJ2ZXIubGlzdGVuKDQwMDAsKCk9PntcclxuLy8gICAgIGNvbnNvbGUubG9nKCdzZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0IDQwMDAnKVxyXG4vLyB9KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "join",
        "require",
        "express",
        "graphqlHTTP",
        "loadSchemaSync",
        "GraphQLFileLoader",
        "addResolversToSchema",
        "Query",
        "Mutation",
        "cors",
        "app",
        "use",
        "schema",
        "__dirname",
        "loaders",
        "schemaWithResolvers",
        "resolvers",
        "graphiql",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAWC,OAAO,CAAC,MAAD,CAAxB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAgBF,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAqBH,OAAO,CAAC,qBAAD,CAAlC;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAwBJ,OAAO,CAAC,oCAAD,CAArC;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAA2BL,OAAO,CAAC,uBAAD,CAAxC;;AACA,MAAMM,KAAK,GAAGN,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMO,QAAQ,GAAGP,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMQ,IAAI,GAAIR,OAAO,CAAC,MAAD,CAArB;;AAGA,MAAMS,GAAG,GAAGR,OAAO,EAAnB;AACAQ,GAAG,CAACC,GAAJ,CAAQF,IAAI,EAAZ;AACA,MAAMG,MAAM,GAAIR,cAAc,CAACJ,IAAI,CAACa,SAAD,EAAW,kBAAX,CAAL,EAAoC;AAC9DC,EAAAA,OAAO,EAAE,CAAC,IAAIT,iBAAJ,EAAD;AADqD,CAApC,CAA9B;AAIA,MAAMU,mBAAmB,GAAGT,oBAAoB,CAAC;AAC7CM,EAAAA,MAD6C;AAE7CI,EAAAA,SAAS,EAAC;AACNT,IAAAA;AADM;AAFmC,CAAD,CAAhD;AAOAG,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBR,WAAW,CAAC;AAC5BS,EAAAA,MAAM,EAAEG,mBADoB;AAE5BE,EAAAA,QAAQ,EAAE;AAFkB,CAAD,CAA/B,E,CAKA;AACA;AACA;;AAEAP,GAAG,CAACQ,MAAJ,CAAW,IAAX,EAAgB,MAAI;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,CAFD,E,CAGA;AACA;AACA",
      "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\",
      "sourcesContent": [
        "const { join } = require(\"path\");\r\nconst express = require('express');\r\nconst {graphqlHTTP} = require('express-graphql');\r\nconst { loadSchemaSync } = require(\"@graphql-tools/load\");\r\nconst { GraphQLFileLoader } = require(\"@graphql-tools/graphql-file-loader\");\r\nconst { addResolversToSchema } = require(\"@graphql-tools/schema\");\r\nconst Query = require(\"./resolvers/query\");\r\nconst Mutation = require(\"./resolvers/mutation\");\r\nconst cors =  require(\"cors\");\r\n\r\n\r\nconst app = express();\r\napp.use(cors());\r\nconst schema =  loadSchemaSync(join(__dirname,\"./schema.graphql\"),{\r\n    loaders: [new GraphQLFileLoader()],\r\n});\r\n\r\nconst schemaWithResolvers = addResolversToSchema({\r\n    schema,\r\n    resolvers:{\r\n        Query\r\n       \r\n    },\r\n})\r\napp.use('/graphql', graphqlHTTP({\r\n    schema: schemaWithResolvers,\r\n    graphiql: true,\r\n}));\r\n\r\n// const server = new ApolloClient({\r\n//     schema: schemaWithResolvers\r\n// })\r\n\r\napp.listen(4000,()=>{\r\n    console.log('server is running on port 4000')\r\n});\r\n// server.listen(4000,()=>{\r\n//     console.log('server is running on port 4000')\r\n// })"
      ]
    },
    "sourceType": "module",
    "mtime": 1615975756560
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\",\"filename\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\\\\src\\\\resolvers\\\\query.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\",\"plugins\":[],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server",
      "filename": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\query.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\query.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\query.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\",
        "sourceFileName": "query.js"
      }
    },
    "ast": null,
    "code": "const {\n  PrismaClient\n} = require(\"@prisma/client\");\n\nconst prisma = new PrismaClient();\nconst Query = {\n  coupounById: async (parent, args, ctx, info) => {\n    const coupons = await prisma.coupenCode.findUnique({\n      where: {\n        id: +args.id\n      }\n    }); // console.log(coupons);\n\n    return coupons;\n  },\n  validate: async (parent, args, ctx, info) => {\n    var d = parseInt(new Date().getTime());\n    const status = await prisma.coupenCode.findUnique({\n      where: {\n        title: args.title\n      }\n    });\n\n    if (status !== null) {\n      const from = status.validFrom.getTime();\n      const to = status.validTo.getTime(); //    str1.localeCompare(str2)\n\n      if (to > d && from < d) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      console.log(d);\n      return false;\n    }\n  }\n};\nmodule.exports = Query;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXJ5LmpzIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInJlcXVpcmUiLCJwcmlzbWEiLCJRdWVyeSIsImNvdXBvdW5CeUlkIiwicGFyZW50IiwiYXJncyIsImN0eCIsImluZm8iLCJjb3Vwb25zIiwiY291cGVuQ29kZSIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsImlkIiwidmFsaWRhdGUiLCJkIiwicGFyc2VJbnQiLCJEYXRlIiwiZ2V0VGltZSIsInN0YXR1cyIsInRpdGxlIiwiZnJvbSIsInZhbGlkRnJvbSIsInRvIiwidmFsaWRUbyIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBbUJDLE9BQU8sQ0FBQyxnQkFBRCxDQUFoQzs7QUFFQSxNQUFNQyxNQUFNLEdBQUcsSUFBSUYsWUFBSixFQUFmO0FBR0EsTUFBTUcsS0FBSyxHQUFHO0FBQ1ZDLEVBQUFBLFdBQVcsRUFBRSxPQUFNQyxNQUFOLEVBQWFDLElBQWIsRUFBa0JDLEdBQWxCLEVBQXNCQyxJQUF0QixLQUE2QjtBQUN0QyxVQUFNQyxPQUFPLEdBQUcsTUFBTVAsTUFBTSxDQUFDUSxVQUFQLENBQWtCQyxVQUFsQixDQUE2QjtBQUNsREMsTUFBQUEsS0FBSyxFQUFFO0FBQ0hDLFFBQUFBLEVBQUUsRUFBRSxDQUFDUCxJQUFJLENBQUNPO0FBRFA7QUFEMkMsS0FBN0IsQ0FBdEIsQ0FEc0MsQ0FNdEM7O0FBQ0EsV0FBT0osT0FBUDtBQUNILEdBVFM7QUFXVkssRUFBQUEsUUFBUSxFQUFFLE9BQU1ULE1BQU4sRUFBYUMsSUFBYixFQUFrQkMsR0FBbEIsRUFBc0JDLElBQXRCLEtBQTZCO0FBRW5DLFFBQUlPLENBQUMsR0FBR0MsUUFBUSxDQUFDLElBQUlDLElBQUosR0FBV0MsT0FBWCxFQUFELENBQWhCO0FBRUEsVUFBTUMsTUFBTSxHQUFDLE1BQU1qQixNQUFNLENBQUNRLFVBQVAsQ0FBa0JDLFVBQWxCLENBQTZCO0FBQzVDQyxNQUFBQSxLQUFLLEVBQUU7QUFDSFEsUUFBQUEsS0FBSyxFQUFFZCxJQUFJLENBQUNjO0FBRFQ7QUFEcUMsS0FBN0IsQ0FBbkI7O0FBS0csUUFBR0QsTUFBTSxLQUFHLElBQVosRUFBaUI7QUFDYixZQUFNRSxJQUFJLEdBQUVGLE1BQU0sQ0FBQ0csU0FBUCxDQUFpQkosT0FBakIsRUFBWjtBQUNBLFlBQU1LLEVBQUUsR0FBQ0osTUFBTSxDQUFDSyxPQUFQLENBQWVOLE9BQWYsRUFBVCxDQUZhLENBR2hCOztBQUVHLFVBQUdLLEVBQUUsR0FBQ1IsQ0FBSCxJQUFRTSxJQUFJLEdBQUNOLENBQWhCLEVBQWtCO0FBQ2pCLGVBQU8sSUFBUDtBQUNBLE9BRkQsTUFHSTtBQUNGLGVBQU8sS0FBUDtBQUNEO0FBQ0osS0FYRCxNQVlJO0FBQ0FVLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWCxDQUFaO0FBQ0EsYUFBTyxLQUFQO0FBQ0Y7QUFFUjtBQXJDUyxDQUFkO0FBd0NBWSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ6QixLQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcVVNfQklMTF9QQVlcXFNob3J0IGZsaW0gYXBwXFxTaG9ydC1GaWxtXFxTZXJ2ZXJcXHNyY1xccmVzb2x2ZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFByaXNtYUNsaWVudCB9ID0gcmVxdWlyZShcIkBwcmlzbWEvY2xpZW50XCIpO1xyXG5cclxuY29uc3QgcHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpO1xyXG5cclxuXHJcbmNvbnN0IFF1ZXJ5ID0ge1xyXG4gICAgY291cG91bkJ5SWQ6IGFzeW5jKHBhcmVudCxhcmdzLGN0eCxpbmZvKT0+e1xyXG4gICAgICAgIGNvbnN0IGNvdXBvbnMgPSBhd2FpdCBwcmlzbWEuY291cGVuQ29kZS5maW5kVW5pcXVlKHtcclxuICAgICAgICAgd2hlcmU6IHtcclxuICAgICAgICAgICAgIGlkOiArYXJncy5pZCxcclxuICAgICAgICAgfSwgICBcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhjb3Vwb25zKTtcclxuICAgICAgICByZXR1cm4gY291cG9ucztcclxuICAgIH0sXHJcbiAgICBcclxuICAgIHZhbGlkYXRlOiBhc3luYyhwYXJlbnQsYXJncyxjdHgsaW5mbyk9PntcclxuXHJcbiAgICAgICAgdmFyIGQgPSBwYXJzZUludChuZXcgRGF0ZSgpLmdldFRpbWUoKSlcclxuXHJcbiAgICAgICAgY29uc3Qgc3RhdHVzPWF3YWl0IHByaXNtYS5jb3VwZW5Db2RlLmZpbmRVbmlxdWUoe1xyXG4gICAgICAgICAgICB3aGVyZToge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6IGFyZ3MudGl0bGUsXHJcbiAgICAgICAgICAgIH0sICAgXHJcbiAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgaWYoc3RhdHVzIT09bnVsbCl7XHJcbiAgICAgICAgICAgICAgIGNvbnN0IGZyb209IHN0YXR1cy52YWxpZEZyb20uZ2V0VGltZSgpXHJcbiAgICAgICAgICAgICAgIGNvbnN0IHRvPXN0YXR1cy52YWxpZFRvLmdldFRpbWUoKVxyXG4gICAgICAgICAgICAvLyAgICBzdHIxLmxvY2FsZUNvbXBhcmUoc3RyMilcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgIGlmKHRvPmQgJiYgZnJvbTxkKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICB9XHJcbiAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgY29uc29sZS5sb2coZClcclxuICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICBcclxuICAgIH1cclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUXVlcnk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "query.js"
      ],
      "names": [
        "PrismaClient",
        "require",
        "prisma",
        "Query",
        "coupounById",
        "parent",
        "args",
        "ctx",
        "info",
        "coupons",
        "coupenCode",
        "findUnique",
        "where",
        "id",
        "validate",
        "d",
        "parseInt",
        "Date",
        "getTime",
        "status",
        "title",
        "from",
        "validFrom",
        "to",
        "validTo",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,gBAAD,CAAhC;;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,EAAf;AAGA,MAAMG,KAAK,GAAG;AACVC,EAAAA,WAAW,EAAE,OAAMC,MAAN,EAAaC,IAAb,EAAkBC,GAAlB,EAAsBC,IAAtB,KAA6B;AACtC,UAAMC,OAAO,GAAG,MAAMP,MAAM,CAACQ,UAAP,CAAkBC,UAAlB,CAA6B;AAClDC,MAAAA,KAAK,EAAE;AACHC,QAAAA,EAAE,EAAE,CAACP,IAAI,CAACO;AADP;AAD2C,KAA7B,CAAtB,CADsC,CAMtC;;AACA,WAAOJ,OAAP;AACH,GATS;AAWVK,EAAAA,QAAQ,EAAE,OAAMT,MAAN,EAAaC,IAAb,EAAkBC,GAAlB,EAAsBC,IAAtB,KAA6B;AAEnC,QAAIO,CAAC,GAAGC,QAAQ,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD,CAAhB;AAEA,UAAMC,MAAM,GAAC,MAAMjB,MAAM,CAACQ,UAAP,CAAkBC,UAAlB,CAA6B;AAC5CC,MAAAA,KAAK,EAAE;AACHQ,QAAAA,KAAK,EAAEd,IAAI,CAACc;AADT;AADqC,KAA7B,CAAnB;;AAKG,QAAGD,MAAM,KAAG,IAAZ,EAAiB;AACb,YAAME,IAAI,GAAEF,MAAM,CAACG,SAAP,CAAiBJ,OAAjB,EAAZ;AACA,YAAMK,EAAE,GAACJ,MAAM,CAACK,OAAP,CAAeN,OAAf,EAAT,CAFa,CAGhB;;AAEG,UAAGK,EAAE,GAACR,CAAH,IAAQM,IAAI,GAACN,CAAhB,EAAkB;AACjB,eAAO,IAAP;AACA,OAFD,MAGI;AACF,eAAO,KAAP;AACD;AACJ,KAXD,MAYI;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AACA,aAAO,KAAP;AACF;AAER;AArCS,CAAd;AAwCAY,MAAM,CAACC,OAAP,GAAiBzB,KAAjB",
      "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\",
      "sourcesContent": [
        "const { PrismaClient } = require(\"@prisma/client\");\r\n\r\nconst prisma = new PrismaClient();\r\n\r\n\r\nconst Query = {\r\n    coupounById: async(parent,args,ctx,info)=>{\r\n        const coupons = await prisma.coupenCode.findUnique({\r\n         where: {\r\n             id: +args.id,\r\n         },   \r\n        });\r\n        // console.log(coupons);\r\n        return coupons;\r\n    },\r\n    \r\n    validate: async(parent,args,ctx,info)=>{\r\n\r\n        var d = parseInt(new Date().getTime())\r\n\r\n        const status=await prisma.coupenCode.findUnique({\r\n            where: {\r\n                title: args.title,\r\n            },   \r\n           });\r\n           if(status!==null){\r\n               const from= status.validFrom.getTime()\r\n               const to=status.validTo.getTime()\r\n            //    str1.localeCompare(str2)\r\n            \r\n               if(to>d && from<d){\r\n                return true;\r\n               }\r\n               else{\r\n                 return false\r\n               }\r\n           }\r\n           else{\r\n               console.log(d)\r\n               return false\r\n            }\r\n           \r\n    }\r\n};\r\n\r\nmodule.exports = Query;"
      ]
    },
    "sourceType": "module",
    "mtime": 1616039747570
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\",\"filename\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\\\\src\\\\resolvers\\\\mutation.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\US_BILL_PAY\\\\Short flim app\\\\Short-Film\\\\Server\",\"plugins\":[],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server",
      "filename": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\mutation.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\mutation.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\mutation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\",
        "sourceFileName": "mutation.js"
      }
    },
    "ast": null,
    "code": "const {\n  PrismaClient\n} = require(\"@Prisma/client\");\n\nconst prisma = new PrismaClient();\nconst Mutation = {\n  createUser: async (parent, args, ctx, info) => {\n    console.log(args);\n    const dataSet = args.data;\n    const emailExists = await prisma.user.findMany({\n      where: {\n        email: dataSet.email\n      }\n    });\n\n    if (emailExists.length === 0) {\n      const user = await prisma.user.create({\n        data: args.data\n      });\n      console.log(user);\n      return user;\n    } else {\n      throw new Error(\"User Already Exists\");\n    }\n  },\n  deleteUser: async (parent, args, ctx, info) => {\n    console.log(args);\n    const deleteId = +args.id;\n    const userExists = await prisma.user.findUnique({\n      where: {\n        id: deleteId\n      }\n    });\n\n    if (userExists) {\n      const user = await prisma.user.delete({\n        where: {\n          id: deleteId\n        }\n      });\n      console.log(user);\n      return user;\n    } else {\n      throw new Error(\"User Does Not Exist\");\n    }\n  }\n};\nmodule.exports = Mutation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm11dGF0aW9uLmpzIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInJlcXVpcmUiLCJwcmlzbWEiLCJNdXRhdGlvbiIsImNyZWF0ZVVzZXIiLCJwYXJlbnQiLCJhcmdzIiwiY3R4IiwiaW5mbyIsImNvbnNvbGUiLCJsb2ciLCJkYXRhU2V0IiwiZGF0YSIsImVtYWlsRXhpc3RzIiwidXNlciIsImZpbmRNYW55Iiwid2hlcmUiLCJlbWFpbCIsImxlbmd0aCIsImNyZWF0ZSIsIkVycm9yIiwiZGVsZXRlVXNlciIsImRlbGV0ZUlkIiwiaWQiLCJ1c2VyRXhpc3RzIiwiZmluZFVuaXF1ZSIsImRlbGV0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFtQkMsT0FBTyxDQUFDLGdCQUFELENBQWhDOztBQUVBLE1BQU1DLE1BQU0sR0FBRyxJQUFJRixZQUFKLEVBQWY7QUFFQSxNQUFNRyxRQUFRLEdBQUc7QUFDZkMsRUFBQUEsVUFBVSxFQUFFLE9BQU9DLE1BQVAsRUFBZUMsSUFBZixFQUFxQkMsR0FBckIsRUFBMEJDLElBQTFCLEtBQW1DO0FBQzdDQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosSUFBWjtBQUNBLFVBQU1LLE9BQU8sR0FBR0wsSUFBSSxDQUFDTSxJQUFyQjtBQUNBLFVBQU1DLFdBQVcsR0FBRyxNQUFNWCxNQUFNLENBQUNZLElBQVAsQ0FBWUMsUUFBWixDQUFxQjtBQUM3Q0MsTUFBQUEsS0FBSyxFQUFFO0FBQ0xDLFFBQUFBLEtBQUssRUFBRU4sT0FBTyxDQUFDTTtBQURWO0FBRHNDLEtBQXJCLENBQTFCOztBQUtBLFFBQUlKLFdBQVcsQ0FBQ0ssTUFBWixLQUF1QixDQUEzQixFQUE4QjtBQUM1QixZQUFNSixJQUFJLEdBQUcsTUFBTVosTUFBTSxDQUFDWSxJQUFQLENBQVlLLE1BQVosQ0FBbUI7QUFBRVAsUUFBQUEsSUFBSSxFQUFFTixJQUFJLENBQUNNO0FBQWIsT0FBbkIsQ0FBbkI7QUFDQUgsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlJLElBQVo7QUFDQSxhQUFPQSxJQUFQO0FBQ0QsS0FKRCxNQUlPO0FBQ0wsWUFBTSxJQUFJTSxLQUFKLENBQVUscUJBQVYsQ0FBTjtBQUNEO0FBQ0YsR0FoQmM7QUFpQmZDLEVBQUFBLFVBQVUsRUFBRSxPQUFPaEIsTUFBUCxFQUFlQyxJQUFmLEVBQXFCQyxHQUFyQixFQUEwQkMsSUFBMUIsS0FBbUM7QUFDN0NDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixJQUFaO0FBQ0MsVUFBTWdCLFFBQVEsR0FBRyxDQUFDaEIsSUFBSSxDQUFDaUIsRUFBdkI7QUFDRCxVQUFNQyxVQUFVLEdBQUcsTUFBTXRCLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZVyxVQUFaLENBQXVCO0FBQzlDVCxNQUFBQSxLQUFLLEVBQUU7QUFDTE8sUUFBQUEsRUFBRSxFQUFFRDtBQURDO0FBRHVDLEtBQXZCLENBQXpCOztBQUtBLFFBQUlFLFVBQUosRUFBZ0I7QUFDZCxZQUFNVixJQUFJLEdBQUcsTUFBTVosTUFBTSxDQUFDWSxJQUFQLENBQVlZLE1BQVosQ0FBbUI7QUFBRVYsUUFBQUEsS0FBSyxFQUFFO0FBQzdDTyxVQUFBQSxFQUFFLEVBQUVEO0FBRHlDO0FBQVQsT0FBbkIsQ0FBbkI7QUFHQWIsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlJLElBQVo7QUFDQSxhQUFPQSxJQUFQO0FBQ0QsS0FORCxNQU1PO0FBQ0wsWUFBTSxJQUFJTSxLQUFKLENBQVUscUJBQVYsQ0FBTjtBQUNEO0FBQ0Y7QUFsQ2MsQ0FBakI7QUFxQ0FPLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnpCLFFBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxVU19CSUxMX1BBWVxcU2hvcnQgZmxpbSBhcHBcXFNob3J0LUZpbG1cXFNlcnZlclxcc3JjXFxyZXNvbHZlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUHJpc21hQ2xpZW50IH0gPSByZXF1aXJlKFwiQFByaXNtYS9jbGllbnRcIik7XHJcblxyXG5jb25zdCBwcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KCk7XHJcblxyXG5jb25zdCBNdXRhdGlvbiA9IHtcclxuICBjcmVhdGVVc2VyOiBhc3luYyAocGFyZW50LCBhcmdzLCBjdHgsIGluZm8pID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGFyZ3MpXHJcbiAgICBjb25zdCBkYXRhU2V0ID0gYXJncy5kYXRhO1xyXG4gICAgY29uc3QgZW1haWxFeGlzdHMgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kTWFueSh7XHJcbiAgICAgIHdoZXJlOiB7XHJcbiAgICAgICAgZW1haWw6IGRhdGFTZXQuZW1haWwsXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICAgIGlmIChlbWFpbEV4aXN0cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHByaXNtYS51c2VyLmNyZWF0ZSh7IGRhdGE6IGFyZ3MuZGF0YSB9KTtcclxuICAgICAgY29uc29sZS5sb2codXNlcik7XHJcbiAgICAgIHJldHVybiB1c2VyO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVXNlciBBbHJlYWR5IEV4aXN0c1wiKTtcclxuICAgIH1cclxuICB9LFxyXG4gIGRlbGV0ZVVzZXI6IGFzeW5jIChwYXJlbnQsIGFyZ3MsIGN0eCwgaW5mbykgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYXJncylcclxuICAgICBjb25zdCBkZWxldGVJZCA9ICthcmdzLmlkO1xyXG4gICAgY29uc3QgdXNlckV4aXN0cyA9IGF3YWl0IHByaXNtYS51c2VyLmZpbmRVbmlxdWUoe1xyXG4gICAgICB3aGVyZToge1xyXG4gICAgICAgIGlkOiBkZWxldGVJZCxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgaWYgKHVzZXJFeGlzdHMpIHtcclxuICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHByaXNtYS51c2VyLmRlbGV0ZSh7IHdoZXJlOiB7XHJcbiAgICAgICAgaWQ6IGRlbGV0ZUlkLFxyXG4gICAgICB9IH0pO1xyXG4gICAgICBjb25zb2xlLmxvZyh1c2VyKTtcclxuICAgICAgcmV0dXJuIHVzZXI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVc2VyIERvZXMgTm90IEV4aXN0XCIpO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gTXV0YXRpb247XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mutation.js"
      ],
      "names": [
        "PrismaClient",
        "require",
        "prisma",
        "Mutation",
        "createUser",
        "parent",
        "args",
        "ctx",
        "info",
        "console",
        "log",
        "dataSet",
        "data",
        "emailExists",
        "user",
        "findMany",
        "where",
        "email",
        "length",
        "create",
        "Error",
        "deleteUser",
        "deleteId",
        "id",
        "userExists",
        "findUnique",
        "delete",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,gBAAD,CAAhC;;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,EAAf;AAEA,MAAMG,QAAQ,GAAG;AACfC,EAAAA,UAAU,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,IAA1B,KAAmC;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMK,OAAO,GAAGL,IAAI,CAACM,IAArB;AACA,UAAMC,WAAW,GAAG,MAAMX,MAAM,CAACY,IAAP,CAAYC,QAAZ,CAAqB;AAC7CC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAEN,OAAO,CAACM;AADV;AADsC,KAArB,CAA1B;;AAKA,QAAIJ,WAAW,CAACK,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,YAAMJ,IAAI,GAAG,MAAMZ,MAAM,CAACY,IAAP,CAAYK,MAAZ,CAAmB;AAAEP,QAAAA,IAAI,EAAEN,IAAI,CAACM;AAAb,OAAnB,CAAnB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,aAAOA,IAAP;AACD,KAJD,MAIO;AACL,YAAM,IAAIM,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF,GAhBc;AAiBfC,EAAAA,UAAU,EAAE,OAAOhB,MAAP,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,IAA1B,KAAmC;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACC,UAAMgB,QAAQ,GAAG,CAAChB,IAAI,CAACiB,EAAvB;AACD,UAAMC,UAAU,GAAG,MAAMtB,MAAM,CAACY,IAAP,CAAYW,UAAZ,CAAuB;AAC9CT,MAAAA,KAAK,EAAE;AACLO,QAAAA,EAAE,EAAED;AADC;AADuC,KAAvB,CAAzB;;AAKA,QAAIE,UAAJ,EAAgB;AACd,YAAMV,IAAI,GAAG,MAAMZ,MAAM,CAACY,IAAP,CAAYY,MAAZ,CAAmB;AAAEV,QAAAA,KAAK,EAAE;AAC7CO,UAAAA,EAAE,EAAED;AADyC;AAAT,OAAnB,CAAnB;AAGAb,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,aAAOA,IAAP;AACD,KAND,MAMO;AACL,YAAM,IAAIM,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF;AAlCc,CAAjB;AAqCAO,MAAM,CAACC,OAAP,GAAiBzB,QAAjB",
      "sourceRoot": "D:\\US_BILL_PAY\\Short flim app\\Short-Film\\Server\\src\\resolvers\\",
      "sourcesContent": [
        "const { PrismaClient } = require(\"@Prisma/client\");\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nconst Mutation = {\r\n  createUser: async (parent, args, ctx, info) => {\r\n    console.log(args)\r\n    const dataSet = args.data;\r\n    const emailExists = await prisma.user.findMany({\r\n      where: {\r\n        email: dataSet.email,\r\n      },\r\n    });\r\n    if (emailExists.length === 0) {\r\n      const user = await prisma.user.create({ data: args.data });\r\n      console.log(user);\r\n      return user;\r\n    } else {\r\n      throw new Error(\"User Already Exists\");\r\n    }\r\n  },\r\n  deleteUser: async (parent, args, ctx, info) => {\r\n    console.log(args)\r\n     const deleteId = +args.id;\r\n    const userExists = await prisma.user.findUnique({\r\n      where: {\r\n        id: deleteId,\r\n      },\r\n    });\r\n    if (userExists) {\r\n      const user = await prisma.user.delete({ where: {\r\n        id: deleteId,\r\n      } });\r\n      console.log(user);\r\n      return user;\r\n    } else {\r\n      throw new Error(\"User Does Not Exist\");\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = Mutation;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615899742000
  }
}