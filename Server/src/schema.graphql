scalar Date
type Query {
  coupounById(id: ID!): CoupounCode!
  validate(title: String!): Boolean!
  user(id: ID!): User!
  cart(userId: Int!): [Cart!]
  carts: [Cart!]!
  users: [User!]!
  postBygenre(id: Int!): [Post!]
}
type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  token: String
  Cart: [Cart]
  post: [Post!]
}
type Cart {
  id: ID!
  user: User!
  userId: ID
  saveForLater: Boolean
  status: Boolean
  Post: Post! 
}
type Post{
  id: ID!
  title: String!
  price: Float!
  published: Boolean
  createdAt: Date
  authorId: Int
  rating: Float
  cartId: Int
  directorId: Int
  Director: Director!
}
type CoupounCode {
  id: ID!
  offer: Int!
  title: String!
  validFrom: Date
  validTo: Date
  status: String!
}
type Director {
  id: Int!   
  name:    String!
  avathar: String!
  Post:    [Post!]
}
type Mutation {
  # createUser(data: createUserInput!): User!
  deleteCartItem(id: Int!):Cart!
}
# type PersonalDetails{
#     id:ID!
#     firstName:String!
#     lastName:String!
#     email:String!
#     dob:String!
#     geners: [Geners!]!
#     facebook:String!
#     twitter:String!
# }
# type WatchHistory{
#     id:ID!
#     title:String!
#     author:String!
#     image:String!
#     rating:Int!
#     noOfRating:Int!
#     views:Int!
#     postCreatedTime:Int!
# }


# type Query{
#   userById(id: Int!): User!
#   users: [User!]!
# }



